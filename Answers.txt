1. Print odd numbers in an array:

anonymous function:

var temp = [];
  var odd = function(arr){
      for(var i=0; i<arr.length; i++){
          if(arr[i] %2 !=0){              
              temp.push(arr[i]);
          }
      }
      return temp;
  }
  console.log(odd([12,13,14,15]));

           

IIFE:

var temp = [];
  (function odd(arr){
      for(var i=0; i<arr.length; i++){
          if(arr[i] %2 !=0){
              
              temp.push(arr[i]);
          }
      }
      console.log(temp);
  }) ([12,13,14,15]);

            
arrow function:

var temp = [];
  var odd = (arr) => {
      for(var i=0; i<arr.length; i++){
          if(arr[i] %2 !=0){
              temp.push(arr[i]);
          }
      }
      return temp;
  }
  console.log(odd( [12,13,14,15] ));

------------------------------------------------------------------------------------------------------------------
2.Convert all the strings to title caps in a string array:
anonymous function :

var titlecase = function(arr){
      for(var i=0; i<arr.length; i++){
          arr[i] = arr[i].toLowerCase();
          arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);
      }
      return arr;
  }
  console.log(titlecase(["GUVI", "geek", "aPPLe", "MaNgO"]));

            
IIFE:

(function titlecase(arr){
   for(var i=0; i<arr.length; i++){
     arr[i] = arr[i].toLowerCase();
     arr[i] = arr[i].charAt(0).toUpperCase()+arrr[i].slice(1);
      }
    console.log(arr);
  
  }) (["GUVI", "geek", "aPPLe", "MaNgO"]);

           

arrow function:

var titlecase = (arr) => {
      for(var i=0; i<arr.length; i++){
          arr[i] = arr[i].toLowerCase();
          arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);
      }
      return arr;
  }
  console.log(titlecase(["GUVI", "geek", "aPPLe", "MaNgO"]));
-----------------------------------------------------------------------------------------------------------------------

3.Sum of all numbers in an array:
anonymous function :

var total =0;
  var sum = function(arr){
      for(var i=0; i<arr.length; i++){
          total = total + arr[i];
      }
      return total;
  }
  console.log(sum([1,2,3,4]));



IIFE:
var total =0;
  (function sum(arr){
      for(var i=0; i<arr.length; i++){
          total = total + arr[i];
      }
      console.log(total);
  }) ([1,2,3,4]);



arrow function:
var total =0;
  var sum = (arr) => {
      for(var i=0; i<arr.length; i++){
          total = total + arr[i];
      }
      return total;
  }
  console.log(sum([1,2,3,4]));

--------------------------------------------------------------------------------------------------------------

4.Return all the prime numbers in an array:
anonymous function:
var temp = []; 
  var prime = function(num){
      if(num<2) return false;       
      for(var k=2; k<num; k++){
            if(num %k ==0){
                return false;
            }
        }
        return true;
      }
      
  var is_prime = function(arr){      
      for(var i=0; i<arr.length; i++){
          if(prime(arr[i])){
              temp.push(arr[i]);
          }
      }
    return temp;
  }    
  console.log(is_prime([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,18, 19, 20, 21, 22, 23, 24, 25]));
             
IIFE:
var temp = []; 
  var prime = (num) =>{
      if(num<2) return false; 
      
      for(var k=2; k<num; k++){
            if(num %k ==0){
                return false;
            }
        }
        return true;
      }      
  (function is_prime(arr){
      
      for(var i=0; i<arr.length; i++){
          if(prime(arr[i])){
              temp.push(arr[i]);
          }
      }
    console.log(temp);
  }) ([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,18, 19, 20, 21, 22, 23, 24, 25]);
                
arrow function:
 temp = []; 
  var prime = (num) =>{
      if(num<2) return false;      
      for(var k=2; k<num; k++){
            if(num %k ==0){
                return false;
            }
        }
        return true;
      }      
  var is_prime = (arr) => {
      
      for(var i=0; i<arr.length; i++){
          if(prime(arr[i])){
              temp.push(arr[i]);
          }
      }
    return temp;
  }    
  console.log(is_prime([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,18, 19, 20, 21, 22, 23, 24, 25]));
  -----------------------------------------------------------------------------------------------------------

  5.Return all the palindromes in an array:
anonymous function:
var temp = [];
  var palindrome = function(arr){
      for(var i=0; i<arr.length; i++){
          var str = arr[i];
          var rev = arr[i].split("").reverse().join("");
          
          if(str == rev){
             temp.push(str);
          }
      }
    return temp;
  }
  console.log(palindrome(["121", "madam", "424", "guvi", "dad"]));
                      
IIFE:
var temp = [];
  (function palindrome(arr){
      for(var i=0; i<arr.length; i++){
          var str = arr[i];
          var rev = arr[i].split("").reverse().join("");
          
          if(str == rev){
             temp.push(str);
          }
      }
    console.log(temp);
  }) (["121", "madam", "424", "guvi", "dad"]);

         

arrow function:

var temp = [];
  var palindrome = (arr) => {
      for(var i=0; i<arr.length; i++){
          var str = arr[i];
          var rev = arr[i].split("").reverse().join("");
          
          if(str == rev){
             temp.push(str);
          }
      }
    return temp;
  }
  console.log(palindrome(["121", "madam", "424", "guvi", "dad"]));
--------------------------------------------------------------------------------------------------------------


6.Return median of two sorted arrays of the same size.
anonymous function:

var median = function(arr1, arr2){
    var arr = [...arr1,...arr2].sort();

    if(arr.length %2 ==0){
        var mid1 = arr[arr.length/2];
        var mid2 = arr[arr.length/2 -1];
        return (mid1+mid2)/2;
        
    }else {
        return arr[Math.floor(arr.length/2)];
        
    }
    
};
console.log(median([1,10,50],[40,51,62]));
---------------------------------------------------------------------------------------------------------------------


7.Remove duplicates from an array:
anonymous function:
var temp = [];
var remove = function(arr){
    for(var i=0; i<arr.length; i++){
        var count=0;
        for(var k=i; k<arr.length; k++){
            if(arr[i] == arr[k]){
                count++;
            }
        }
        if(count<=1){
          temp.push(arr[i]);  
        }
    }
    return temp;
}
console.log(remove( ["apple", "mango", "apple", "orange", "mango", "mango"]));
                                           
IIFE:
var temp = [];
(function remove(arr){
    for(var i=0; i<arr.length; i++){
        var count=0;
        for(var k=i; k<arr.length; k++){
            if(arr[i] == arr[k]){
                count++;
            }
        }
        if(count<=1){
          temp.push(arr[i]);  
        }
    }
    console.log(temp);
}) ( ["apple", "mango", "apple","orange", "mango", "mango"]);

-----------------------------------------------------------------------------------------------------------------------

8.Rotate an array by k times:
anonymous function:

var rotate = function(arr,k){
     for(var i=0; i<k; i++){
         arr.unshift(arr.pop());
     }
    return arr;
 }
 console.log(rotate([1,2,3],2));
                  
IIFE:
(function rotate (arr,k){
     for(var i=0; i<k; i++){
         arr.unshift(arr.pop());
     }
    console.log(arr);
 }) ([1,2,3],2);
